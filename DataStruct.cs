using System;
using System.Collections.Generic;
using System.Text;
using Microsoft.ML;
using Microsoft.ML.Data;
using Microsoft.ML.Core.Data;

namespace PowershellDeobfuscation
{
    public class AstData
    {
        [LoadColumn(0)] public float ArrayExpressionAst;
        [LoadColumn(1)] public float ArrayLiteralAst;
        [LoadColumn(2)] public float AssignmentStatementAst;
        [LoadColumn(3)] public float AttributeAst;
        [LoadColumn(4)] public float AttributeBaseAst;
        [LoadColumn(5)] public float AttributedExpressionAst;
        [LoadColumn(6)] public float BaseCtorInvokeMemberExpressionAst;
        [LoadColumn(7)] public float BinaryExpressionAst;
        [LoadColumn(8)] public float BlockStatementAst;
        [LoadColumn(9)] public float BreakStatementAst;
        [LoadColumn(10)] public float CatchClauseAst;
        [LoadColumn(11)] public float CommandAst;
        [LoadColumn(12)] public float CommandBaseAst;
        [LoadColumn(13)] public float CommandElementAst;
        [LoadColumn(14)] public float CommandExpressionAst;
        [LoadColumn(15)] public float CommandParameterAst;
        [LoadColumn(16)] public float ConfigurationDefinitionAst;
        [LoadColumn(17)] public float ConstantExpressionAst;
        [LoadColumn(18)] public float ContinueStatementAst;
        [LoadColumn(19)] public float ConvertExpressionAst;
        [LoadColumn(20)] public float DataStatementAst;
        [LoadColumn(21)] public float DoUntilStatementAst;
        [LoadColumn(22)] public float DoWhileStatementAst;
        [LoadColumn(23)] public float DynamicKeywordStatementAst;
        [LoadColumn(24)] public float ErrorExpressionAst;
        [LoadColumn(25)] public float ErrorStatementAst;
        [LoadColumn(26)] public float ExitStatementAst;
        [LoadColumn(27)] public float ExpandableStringExpressionAst;
        [LoadColumn(28)] public float ExpressionAst;
        [LoadColumn(29)] public float FileRedirectionAst;
        [LoadColumn(30)] public float ForEachStatementAst;
        [LoadColumn(31)] public float FunctionDefinitionAst;
        [LoadColumn(32)] public float FunctionMemberAst;
        [LoadColumn(33)] public float HashtableAst;
        [LoadColumn(34)] public float IfStatementAst;
        [LoadColumn(35)] public float IndexExpressionAst;
        [LoadColumn(36)] public float InvokeMemberExpressionAst;
        [LoadColumn(37)] public float LabeledStatementAst;
        [LoadColumn(38)] public float LoopStatementAst;
        [LoadColumn(39)] public float MemberAst;
        [LoadColumn(40)] public float MemberExpressionAst;
        [LoadColumn(41)] public float MergingRedirectionAst;
        [LoadColumn(42)] public float NamedAttributeArgumentAst;
        [LoadColumn(43)] public float NamedBlockAst;
        [LoadColumn(44)] public float ParamBlockAst;
        [LoadColumn(45)] public float ParameterAst;
        [LoadColumn(46)] public float ParenExpressionAst;
        [LoadColumn(47)] public float PipelineAst;
        [LoadColumn(48)] public float PipelineBaseAst;
        [LoadColumn(49)] public float PropertyMemberAst;
        [LoadColumn(50)] public float RedirectionAst;
        [LoadColumn(51)] public float ReturnStatementAst;
        [LoadColumn(52)] public float ScriptBlockAst;
        [LoadColumn(53)] public float ScriptBlockExpressionAst;
        [LoadColumn(54)] public float StatementAst;
        [LoadColumn(55)] public float StatementBlockAst;
        [LoadColumn(56)] public float StringConstantExpressionAst;
        [LoadColumn(57)] public float SubExpressionAst;
        [LoadColumn(58)] public float SwitchStatementAst;
        [LoadColumn(59)] public float ThrowStatementAst;
        [LoadColumn(60)] public float TrapStatementAst;
        [LoadColumn(61)] public float TryStatementAst;
        [LoadColumn(62)] public float TypeConstraintAst;
        [LoadColumn(63)] public float TypeDefinitionAst;
        [LoadColumn(64)] public float TypeExpressionAst;
        [LoadColumn(65)] public float UnaryExpressionAst;
        [LoadColumn(66)] public float UsingExpressionAst;
        [LoadColumn(67)] public float UsingStatementAst;
        [LoadColumn(68)] public float VariableExpressionAst;
        [LoadColumn(69)] public float WhileStatementAst;
        [LoadColumn(70)] public float ForStatementAst;
        [LoadColumn(71)] public float ScriptLength;
        [LoadColumn(72)] public float MaxTokenLength;
        [LoadColumn(73)] public float ShannonEntropy;
        [LoadColumn(74)] public float MeanTokenLength;
        [LoadColumn(75)] public float Label;

        public AstData(string vector)
        {
            string[] v = vector.Split(',');
            if(v.Length != 76)
            {
                throw new Exception();
            }

            ArrayExpressionAst = float.Parse(v[0]);
            ArrayLiteralAst = float.Parse(v[1]);
            AssignmentStatementAst = float.Parse(v[2]);
            AttributeAst = float.Parse(v[3]);
            AttributeBaseAst = float.Parse(v[4]);
            AttributedExpressionAst = float.Parse(v[5]);
            BaseCtorInvokeMemberExpressionAst = float.Parse(v[6]);
            BinaryExpressionAst = float.Parse(v[7]);
            BlockStatementAst = float.Parse(v[8]);
            BreakStatementAst = float.Parse(v[9]);
            CatchClauseAst = float.Parse(v[10]);
            CommandAst = float.Parse(v[11]);
            CommandBaseAst = float.Parse(v[12]);
            CommandElementAst = float.Parse(v[13]);
            CommandExpressionAst = float.Parse(v[14]);
            CommandParameterAst = float.Parse(v[15]);
            ConfigurationDefinitionAst = float.Parse(v[16]);
            ConstantExpressionAst = float.Parse(v[17]);
            ContinueStatementAst = float.Parse(v[18]);
            ConvertExpressionAst = float.Parse(v[19]);
            DataStatementAst = float.Parse(v[20]);
            DoUntilStatementAst = float.Parse(v[21]);
            DoWhileStatementAst = float.Parse(v[22]);
            DynamicKeywordStatementAst = float.Parse(v[23]);
            ErrorExpressionAst = float.Parse(v[24]);
            ErrorStatementAst = float.Parse(v[25]);
            ExitStatementAst = float.Parse(v[26]);
            ExpandableStringExpressionAst = float.Parse(v[27]);
            ExpressionAst = float.Parse(v[28]);
            FileRedirectionAst = float.Parse(v[29]);
            ForEachStatementAst = float.Parse(v[30]);
            FunctionDefinitionAst = float.Parse(v[31]);
            FunctionMemberAst = float.Parse(v[32]);
            HashtableAst = float.Parse(v[33]);
            IfStatementAst = float.Parse(v[34]);
            IndexExpressionAst = float.Parse(v[35]);
            InvokeMemberExpressionAst = float.Parse(v[36]);
            LabeledStatementAst = float.Parse(v[37]);
            LoopStatementAst = float.Parse(v[38]);
            MemberAst = float.Parse(v[39]);
            MemberExpressionAst = float.Parse(v[40]);
            MergingRedirectionAst = float.Parse(v[41]);
            NamedAttributeArgumentAst = float.Parse(v[42]);
            NamedBlockAst = float.Parse(v[43]);
            ParamBlockAst = float.Parse(v[44]);
            ParameterAst = float.Parse(v[45]);
            ParenExpressionAst = float.Parse(v[46]);
            PipelineAst = float.Parse(v[47]);
            PipelineBaseAst = float.Parse(v[48]);
            PropertyMemberAst = float.Parse(v[49]);
            RedirectionAst = float.Parse(v[50]);
            ReturnStatementAst = float.Parse(v[51]);
            ScriptBlockAst = float.Parse(v[52]);
            ScriptBlockExpressionAst = float.Parse(v[53]);
            StatementAst = float.Parse(v[54]);
            StatementBlockAst = float.Parse(v[55]);
            StringConstantExpressionAst = float.Parse(v[56]);
            SubExpressionAst = float.Parse(v[57]);
            SwitchStatementAst = float.Parse(v[58]);
            ThrowStatementAst = float.Parse(v[59]);
            TrapStatementAst = float.Parse(v[60]);
            TryStatementAst = float.Parse(v[61]);
            TypeConstraintAst = float.Parse(v[62]);
            TypeDefinitionAst = float.Parse(v[63]);
            TypeExpressionAst = float.Parse(v[64]);
            UnaryExpressionAst = float.Parse(v[65]);
            UsingExpressionAst = float.Parse(v[66]);
            UsingStatementAst = float.Parse(v[67]);
            VariableExpressionAst = float.Parse(v[68]);
            WhileStatementAst = float.Parse(v[69]);
            ForStatementAst = float.Parse(v[70]);
            ScriptLength = float.Parse(v[71]);
            MaxTokenLength = float.Parse(v[72]);
            ShannonEntropy = float.Parse(v[73]);
            MeanTokenLength = float.Parse(v[74]);
            Label = float.Parse(v[75]);
        }
    }
}
